{"version":3,"file":"static/js/43.b3945814.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  /* background-color: yellow; */\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scale(1);\n`;\n","import { CirclesWithBar } from 'react-loader-spinner';\n\n// підключаємо ф-ію роботи з порталами в реакт домі\nimport { createPortal } from 'react-dom';\n\n// стидізація лоадера\nimport { LoaderContainer } from './Loader.styled';\n\n//створюємо новий елемент який буде порталом для модадки\nconst loaderRoot = document.querySelector('#loader-root');\n\nconst Loader = () => {\n  return createPortal(\n    <LoaderContainer>\n      <CirclesWithBar\n        height=\"150\"\n        width=\"300\"\n        color=\"#ff6b17\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        barColor=\"\"\n        ariaLabel=\"circles-with-bar-loading\"\n      />\n    </LoaderContainer>,\n    loaderRoot\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieCardWrap = styled.div`\n  /*----Базовий стиль для мобілки до 479 (респонсивний)----*/\n  display: flex;\n  flex-direction: column;\n\n  /*----Базовий стиль для мобілки 480-767 (адаптивний)----*/\n  @media screen and (min-width: 480px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n\n  /* ----Стиль для планшета 768-1200----\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  /*----Стиль для компа від 1200----*/\n\n  /* @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  } */\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  /*----Базовий стиль для мобілки 480-767 (адаптивний)----*/\n  @media screen and (min-width: 480px) {\n    max-width: 150px;\n    margin-right: 10px;\n  }\n`;\n\nexport const MovieTitle = styled.h2`\n  color: #ff6b17;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const Extra = styled.nav`\n  padding: 20px;\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n\n  /* ----Базовий стиль для мобілки 480-767 (адаптивний)----\n  @media screen and (min-width: 480px) {\n    padding-left: 0;\n  } */\n\n  @media screen and (min-width: 768px) {\n    padding-left: 0;\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  color: #ff6b17;\n  text-decoration: none;\n  background: #ffe9dc;\n  /* border: 2px solid rgb(164, 71, 17); */\n  border-radius: 50px;\n  padding: 9px 30px;\n  min-width: 120px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: transform 250ms linear;\n\n  &:hover {\n    transform: scale(1.1);\n    background: #ff6b17;\n    color: white;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.12), 0 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n\n  &.active {\n    font-weight: 900;\n    background: #ff6b17;\n    color: white;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieCardWrap,\n  Img,\n  MovieTitle,\n  Title,\n  StyledNavLink,\n  Extra,\n} from './MovieCard.styled';\n\nimport { useRef } from 'react';\nimport NoPosterImage from '../../images/noPoster.jpg';\n\nconst MovieCard = ({ movieInfo }) => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  // console.log('location', location);\n\n  const { vote_average } = movieInfo;\n  const score = Math.round(vote_average * 10);\n\n  let genres = movieInfo.genres.map(genre => genre.name).join(', ');\n\n  let posterPath = NoPosterImage;\n  if (movieInfo.poster_path) {\n    posterPath = `https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`;\n  }\n\n  return (\n    <MovieCardWrap>\n      <div>\n        <StyledNavLink to={backLinkLocationRef.current}>Back </StyledNavLink>\n      </div>\n      <div>\n        <Img src={posterPath} alt=\"preview\" />\n      </div>\n      <div>\n        <MovieTitle>{movieInfo.title}</MovieTitle>\n        <p>User score: {score} </p>\n      </div>\n      <div>\n        <Title>Overview </Title>\n        <div>{movieInfo.overview}</div>\n        <Title>Genres </Title>\n        <p>{genres} </p>\n      </div>\n      <Extra>\n        <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n        <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n      </Extra>\n    </MovieCardWrap>\n  );\n};\n\nexport default MovieCard;\n","// підключення React і хуків\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\n// підключення useParams для отримання параметрів з адресного рядка\nimport { useParams, Outlet } from 'react-router-dom';\n\n// підключення функції отримання даних про фільм із api\nimport { getMovieById } from '../utils/api';\n\n// підключення бібліотеки повідомлень\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\n// підключення компонентів\nimport Loader from '../components/Loader/Loader';\nimport MovieCard from '../components/MovieCard/MovieCard';\n\nimport { Container } from 'components/App.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  // const [error, setError] = useState(null);\n  const [showLoader, setShowLoader] = useState(false);\n\n  // const location = useLocation();\n  // const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  // // console.log('location', location);\n\n  // завантаження даних з сервера і встановдення стейтів\n  useEffect(() => {\n    setShowLoader(true);\n    getMovieById(movieId)\n      .then(data => {\n        setMovieInfo(data);\n      })\n      .catch(e => {\n        // setError(e.message);\n      })\n      .finally(() => {\n        setShowLoader(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {showLoader && <Loader />}\n      {/* <ToastContainer /> */}\n\n      <section>\n        <Container>\n          {movieInfo && <MovieCard movieInfo={movieInfo} />}\n          <Outlet />\n        </Container>\n      </section>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","// базовий URL і ключ для доступу до API\nconst API_KEY = 'f051ac50d3bfe0c3fd75f02c1ff7b688';\nconst BASE_URL = 'https://api.themoviedb.org/';\n\n// // 1 отримання трендових фільмів fetch-then\n// export const getTrendiingMovies = () => {\n//   //повний URL запиту\n//   const URL = `${BASE_URL}3/trending/all/week?api_key=${API_KEY}`;\n//   return fetch(URL).then(response => response.json());\n// };\n\n// 1-1 отримання популярних фільмів fetch-then (без косяків апішки)\nexport const getTrendiingMovies = () => {\n  //повний URL запиту\n  const URL = `${BASE_URL}3/movie/popular?api_key=${API_KEY}&page=1`;\n  return fetch(URL).then(response => response.json());\n};\n\n// // 2-1 отримання фільму по id fetch-then\n// export const getMovieById = movieId => {\n//   //повний URL запиту\n//   const URL = `${BASE_URL}3/movie/${movieId}?api_key=${API_KEY}`;\n//   return fetch(URL).then(response => response.json());\n// };\n\n// 2-2 отримання фільму по id з використанням асинхронної функції async-await\nexport const getMovieById = async movieId => {\n  try {\n    const URL = `${BASE_URL}3/movie/${movieId}?api_key=${API_KEY}`;\n    const response = await fetch(URL);\n    const movie = await response.json();\n    // console.log('movie', movie);\n    return movie;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// 3 отримання фільмів fetch-then за назвою запиту і сторінкою\nexport const getMoviesByNameAndPage = (toFind, page) => {\n  //повний URL запиту\n  const URL = `${BASE_URL}3/search/movie?query=${toFind}&include_adult=false&language=en-US&page=${page}&api_key=${API_KEY}`;\n  return fetch(URL).then(response => response.json());\n};\n\n// 4 отримання акторів fetch-then по id фільма\nexport const getMovieCastById = movieId => {\n  //повний URL запиту\n  const URL = `${BASE_URL}3/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`;\n  return fetch(URL).then(response => response.json());\n};\n\n// 5 отримання review fetch-then по id фільма\nexport const getMovieReviewById = movieId => {\n  //повний URL запиту\n  const URL = `${BASE_URL}3/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}&page=1`;\n  return fetch(URL).then(response => response.json());\n};\n"],"names":["LoaderContainer","styled","loaderRoot","document","querySelector","createPortal","height","width","color","wrapperStyle","wrapperClass","visible","outerCircleColor","innerCircleColor","barColor","ariaLabel","MovieCardWrap","Img","MovieTitle","Title","Extra","StyledNavLink","NavLink","movieInfo","location","useLocation","backLinkLocationRef","useRef","state","from","vote_average","score","Math","round","genres","map","genre","name","join","posterPath","NoPosterImage","poster_path","to","current","src","alt","title","overview","movieId","useParams","useState","setMovieInfo","showLoader","setShowLoader","useEffect","getMovieById","then","data","catch","e","finally","Loader","API_KEY","BASE_URL","getTrendiingMovies","URL","fetch","response","json","movie","console","log","message","getMoviesByNameAndPage","toFind","page","getMovieCastById","getMovieReviewById"],"sourceRoot":""}